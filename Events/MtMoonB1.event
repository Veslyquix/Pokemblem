#define ChapterID MtMoonB1Ch
#define GenericA UnitMtMoonWild
#define GenericB UnitMtMoonTrainer
#define ClassA ClassMtMoonB1WildA
#define ClassB ClassMtMoonB1WildB
#define WildLvl 9 
#define TrainerL 13 





EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)
END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, BurrowReinforcementUnits, 4, 4) // Mid burrow 
Reinforce(0xF1, 1, BurrowReinforcementUnits, 6, 4) // SE Burrow 
Reinforce(0xF2, 1, BurrowReinforcementUnits, 9, 4) // NW Burrow 
}


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
AllTrainersPostBattleTalk
END_MAIN



LocationBasedEvents:
House(0, ToRoute4W, 13,32) 
House(0, ToMtMoonB2_E, 25,15) 
House(0, ToMtMoonB2_M, 15,16) 
House(0, ToMtMoonB2_W, 5,6) 
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(13,32) 
EscapeTileEntry(25,15) 
EscapeTileEntry(15,16) 
EscapeTileEntry(5,6) 
EscapeTileTerminator ; } 
#endif 

ToRoute4W:
ChapterTransition(Route4WCh, 19, 5)

ToMtMoonB2_E:
ChapterTransition(MtMoonB2Ch, 28,15)

ToMtMoonB2_M:
ChapterTransition(MtMoonB2Ch, 19, 14)

ToMtMoonB2_W:
ChapterTransition(MtMoonB2Ch, 3, 7)

// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:

SignTrap(24,5, TrainerTip_Typing)
//CutBush(4,2)
//RockSmash(3,2)
//StrengthBoulder(4,3)
SkillScrollTrap(15,4, ChapterID*2, PrescienceID)
SpellScrollTrap(3,21, (ChapterID*2)+1, WaterGun)
RedPokeballTrap(33,25, ChapterID*2, ExoticCandy)
RedPokeballTrap(14, 27, (ChapterID*2)+1, EscapeRope, 3)
StatAccessoryTrap(3,2, (ChapterID*2)+1, EnergyBand_BoostIndex)

CoinsTrap(10,19,ChapterID*2,650)
//CoinsTrap(57,15,(ChapterID*2)+1,600)


//StatAccessoryTrap(17,20, (ChapterID*2), BronzeShield_BoostIndex) 
//GoldPokeballTrap(14,13, (ChapterID*2)+1, Gust) 
//SkillAccessoryTrap(17,20, (ChapterID*2)+1, VantagePlusID) 

SignBTrap(7,3, ChapterID, 0x0) //no extra text 
SignATrap(13,23, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 

//SkillScrollTrap(42,16, ChapterID*2, PatienceID)
//SpellScrollTrap(18,9, (ChapterID*2)+1, DoubleHit)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
//SaveCost(43,3) 


ENDTRAP
ALIGN 4


BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 
ENUT RocketMagikarpFlag


LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Ground, Range(0,0,5,5), Range(2,2,34,17)) //N patch 
LOAD1 0x1 EnemyUnitsB
ENUN
RandomizeEnemyCoords(Ground, Range(0,0,5,5), Range(2,18,34,31)) //S patch 
LOAD1 0x1 EnemyUnitsC // burrows 
ENUN
AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  
 // Burrows 


LOAD1 0x1 HumanTrainers
ENUN 

AutoLevelUnits(TrainerL, True, 0xE0EF) // Trainers given visible levels 
CALL SetBushHpEvent

LABEL 0x63
NoFade
ENDA



ShopItems:
SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 

// Wilds
EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,2] 001b	0x0 0x01 REDA0R2 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 

EnemyUnitsB:
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,2] 001b	0x0 0x01 REDA0R2 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT

EnemyUnitsC:
UNIT 0xF0 BurrowID 0x0 Level(0, Enemy, 1)   [23,11]  0b	0x0 0x01 REDA23R11  [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF1 BurrowID 0x0 Level(0, Enemy, 1)   [31,26] 0b	0x0 0x01 REDA31R26 [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF2 BurrowID 0x0 Level(0, Enemy, 1)   [11,13] 0b	0x0 0x01 REDA11R13 [0x0,0x0,0x0,0x0] BushAI
UNIT 

BurrowReinforcementUnits:
UNIT Reinforcement0 ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 


// ChapterID is defined in each chapter.event. The { } brackets are necessary here. 
{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xE0, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers0) 
MS_TableEntry(0xE1, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers1) 
MS_TableEntry(0xE2, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers2) 
MS_TableEntry(0xE3, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers3) 
MS_TableEntry(0xE4, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers4) 
MS_TableEntry(0xE5, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers5) 
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
SHORT MMB1_0xE0_BQ // 0xE0 
SHORT MMB1_0xE1_BQ // 0xE1
SHORT MMB1_0xE2_BQ // 0xE2 
SHORT MMB1_0xE3_BQ // 0xE3 
SHORT MMB1_0xE4_BQ // 0xE4 
SHORT MMB1_0xE5_BQ // 0xE5
TDQ_TableTerminator

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
SHORT MMB1_0xE0_BD // 0xE0 
SHORT 300 // Gold 
SHORT MMB1_0xE1_BD // 0xE1
SHORT 550 // Gold 
SHORT MMB1_0xE2_BD // 0xE2 
SHORT 200 // Gold 
SHORT MMB1_0xE3_BD // 0xE3 
SHORT 600 // Gold 
SHORT MMB1_0xE4_BD // 0xE4 
SHORT 375 // Gold 
SHORT MMB1_0xE5_BD // 0xE4 
SHORT 500 // Gold 
TDQ_TableTerminator ; }

// all trainers with the same sprite will face the same direction! 
HumanTrainers:
UNIT 0xE0 bug_catcherID 0x0 Level(0, Enemy, 1) [6,23]  0b 0x0	0x1 REDA6R23 [OneRangeWep,0x0,0x0,0x0] TrainerAI
UNIT 0xE1 hikerID 0x0 Level(0, Enemy, 1) [19,20]  0b 0x0	0x1 		REDA17R15 [ThreeRangeWep,0x0,0x0,0x0] TrainerBossAI
UNIT 0xE2 super_nerdID 0x0 Level(LVFACELEFT, Enemy, 1) [29,24]  0b 0x0	0x1 REDA29R24 [FiveRangeWep,0x0,0x0,0x0] TrainerBossAI
UNIT 0xE3 bug_catcherID 0x0 Level(0, Enemy, 1) [30,08]  0b 0x0	0x1 REDA30R8 [OneRangeWep,0x0,0x0,0x0] TrainerAI //
UNIT 0xE4 hikerID 0x0 Level(0, Enemy, 1) [18,05]  0b 0x0	0x1 		REDA18R5 [OneRangeWep,0x0,0x0,0x0] TrainerAI 
UNIT 0xE5 hikerID 0x0 Level(0, Enemy, 1) [5,12]  0b 0x0	0x1 		REDA5R12 [FiveRangeWep,0x0,0x0,0x0] TrainerBossAI // TrainerBossAI
UNIT


// 9 / 16 - players + 3 unique objects + 3 unique trainers (BugCatcher, Lass, Camper) + weedle+caterpie 
// 7 / 16 - wild + trainer unique classes 
// Weedle, caterpie (not included in 7 count) 
// Zubat, Geodude - wild mons in B1 
// Clefairy - also wild mons in B3 
// B2 - only paras/zubat 

// small: caterpie, weedle, oddish, and diglett 
// b1 - voltorb, diglett, magnemite, kakuna, metapod, zubat, geodude 
// b2 - voltorb, magnemite, pikachu, zubat, paras, 
// B3 - Ekans, Koffing, sandshrew, rattata, clefairy, zubat, geodude 


EnemyTrainers0: // Bug Catcher 
UNIT GenericB 	WeedleID 0xE0 	Level(0, Enemy, 1) [10,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	MetapodID 0xE0 	Level(0, Enemy, 1) [11,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	CaterpieID 0xE0 	Level(0, Enemy, 1) [12,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	MetapodID 0xE0 	Level(0, Enemy, 1) [12,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT

EnemyTrainers1: // hiker
UNIT GenericB 	GeodudeID 0xE1 	Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	DiglettID 0xE1 	Level(0, Enemy, 1) [11,10]  0b 0x0	0x0 0x0 [0x0,0x0,0x0,0x0]  SafestZoningGroupTwoAI
UNIT

EnemyTrainers2: // nerd
UNIT GenericB  VoltorbID 0xE2 	Level(0, Enemy, 1) [ 8,12]  0b 0x0	0x0 0x0 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
//UNIT GenericB  VoltorbID 0xE2 	Level(0, Enemy, 1) [ 9,12]  0b 0x0	0x0 0x0 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT GenericB  VoltorbID 0xE2 	Level(0, Enemy, 1) [ 10,12]  0b 0x0	0x0 0x0 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT

EnemyTrainers3: // Bug Catcher 
UNIT GenericB  MetapodID 0xE3 	Level(0, Enemy, 1) [ 8,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT GenericB  CaterpieID 0xE3 	Level(0, Enemy, 1) [10,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT GenericB  MetapodID 0xE3 	Level(0, Enemy, 1) [10,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT

EnemyTrainers4: // hiker
UNIT GenericB  DiglettID 0xE4 		Level(0, Enemy, 1) [10,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericB  GeodudeID 0xE4 		Level(0, Enemy, 1) [10,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericB  DiglettID 0xE4 		Level(0, Enemy, 1) [10,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT

EnemyTrainers5: // hiker
UNIT GenericB  GeodudeID 0xE5 		Level(0, Enemy, 1) [8,8]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSixAI
UNIT GenericB 	DiglettID 0xE5 	Level(0, Enemy, 1) [12,8]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSixAI
UNIT GenericB 	GeodudeID 0xE5 	Level(0, Enemy, 1) [10,8]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSixAI
//UNIT GenericB 	MetapodID 0xE5 	Level(0, Enemy, 1) [12,8]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSixAI
UNIT




	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID
#define ChapterID VictoryRoadB1Ch
#define GenericA UnitVictoryRoadWild
#define GenericB UnitVictoryRoadTrainer
#define ClassA ClassVictoryRoadWildA
#define ClassB ClassVictoryRoadWildB
#define WildLvl 48
#define TrainerL 50




EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)


END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, ReinforcementUnitsA, 2, 4) 
Reinforce(0xF1, 1, ReinforcementUnitsA, 3, 4) 
}


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
AllTrainersPostBattleTalk
END_MAIN



LocationBasedEvents:
House(0, ToRoute23N, 11,21) 
House(0, ToVictoryRoadB2, 3,2) 
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(11,21) 
EscapeTileEntry(3,2) 
EscapeTileTerminator ; } 
#endif 

ToRoute23N:
ENUT SkipChTransitionFlag
ENUF VR_BoulderInHoleFlag
ChapterTransition(Route23NCh, 5,46)
ToVictoryRoadB2:
ChapterTransition(VictoryRoadB2Ch, 1, 9)





// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
CoinsTrap(14,1,ChapterID*2,2000)
//CoinsTrap(57,15,(ChapterID*2)+1,600)

//VictoryRoad:  Iron, RareCandy, 2000g
//VictoryRoad: Outrage, Protein, 
//VictoryRoad: Megahorn DarkPulse

//RockSmash(29,9)

//StrengthBoulder(4,3)

Rock(9,15) 
RockSmash(14,3)
StrengthBoulder(17,17) 
StrengthBoulder(4,12) 
BoulderReceptacle(20, 16, 9, 15) // Coord, Affected Rock Coord  

//StatAccessoryTrap(43, 13, (ChapterID*2), EnhancedWard_BoostIndex) 
RedPokeballTrap(12,3, (ChapterID*2)+1, ExoticCandy) 
RedPokeballTrap(12,10, (ChapterID*2), Iron) 


//SkillAccessoryTrap(26,4, (ChapterID*2)+1, GaleforceID) 
//SkillAccessoryTrap(13,11, (ChapterID*2), BlossomID) 


//StatAccessoryTrap(14,2, (ChapterID*2)+1, OldWard_BoostIndex)
//SkillAccessoryTrap(37,14, ChapterID*2, DeathBlowID) 
//SkillScrollTrap(18,28, ChapterID*2, StrongRiposteID)

//SkillScrollTrap(27,2, (ChapterID*2)+1, ChivalryID) 

SignBTrap(3,5, ChapterID, 0x0) //no extra text 
SignATrap(11,17, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 



//BerryTree(32,11,5)
//BerryTree(36,11,5)

//SkillScrollTrap(21,9, ChapterID*2, DartingStanceID)
//SpellScrollTrap(16,38, (ChapterID*2)+1, HydroPump)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
//SaveCost(47,5) 



//Flower(18,10)


ENDTRAP
ALIGN 4




BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 


LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Ground, Range(0,0,3,3), Range(4,2,22,11)) 

LOAD1 0x1 EnemyUnitsB
ENUN 
RandomizeEnemyCoords(Ground, Range(0,0,3,3), Range(2,12,20,18)) 

LOAD1 0x1 EnemyBurrows
ENUN 
AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  
LOAD1 1 EnemyTrainers 
ENUN  
AutoLevelUnits(WildLvl, True, 0xE0EF) // Trainers 

CALL SetBushHpEvent

LABEL 0x63
NoFade
ENDA



ShopItems:
SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 



EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 

EnemyUnitsB:
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 

EnemyBurrows:
UNIT 0xF0 BurrowID 0x0 Level(0, Enemy, 1)   [18,0]  0b	0x0 0x01 REDA18R0  [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF1 BurrowID 0x0 Level(0, Enemy, 1)   [8,9]  0b	0x0 0x01 REDA8R9  [0x0,0x0,0x0,0x0] BushAI
UNIT 

ReinforcementUnitsA:
UNIT Reinforcement0 ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 

//battle_girlID
//blackbeltID
//hikerID
//super_nerdID

EnemyTrainers:
UNIT 0xE0 battle_girlID 0x0 Level(0, Enemy, 1) [14,7]  0b 0x0	0x1 REDA14R7  [FiveRangeWep,0x0,0x0,0x0] TrainerBossAI
UNIT 0xE1 bug_catcherID 0x0 Level(0, Enemy, 1) [4,6]  0b 0x0	0x1 REDA4R6  [FiveRangeWep,0x0,0x0,0x0] TrainerBossAI
UNIT

// ChapterID is defined in each chapter.event. The { } brackets are necessary here. 
{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xE0, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers0) 
MS_TableEntry(0xE1, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers1) 
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
SHORT VRB1_0xE0_BQ  // 0xE0 
SHORT VRB1_0xE1_BQ // 0xE0 
TDQ_TableTerminator

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
SHORT VRB1_0xE0_BD // 0xE0 
SHORT 1200 // Gold 
SHORT VRB1_0xE1_BD // 0xE0 
SHORT 1500 // Gold 
TDQ_TableTerminator ; }



// wild B1: GravellerID	ZubatID
// wild B2: Moltres, OnixID	MachokeID	GravellerID	SandslashID 
// wild B3: OnixID	MachokeID	GravellerID	SandslashID VenomothID	GolbatID	MarowakID
// trainer B1: machoke, dragonair, venomoth, pinsir, scyther 


EnemyTrainers0: // battle girl 
UNIT GenericB 	MachokeID 0xE0 	Level(0, Enemy, 1) [10,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	GravellerID 0xE0 	Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
//UNIT GenericB 	DragonairID 0xE0 	Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	GravellerID 0xE0 	Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	MachokeID 0xE0 	Level(0, Enemy, 1) [9,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT

EnemyTrainers1: // bug catcher  
UNIT GenericB 	VenomothID 		0xE1 		Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	PinsirID 	0xE1 		Level(0, Enemy, 1) [9,9]    0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	ScytherID 	0xE1 		Level(0, Enemy, 1) [9,9]    0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	VenomothID 		0xE1 		Level(0, Enemy, 1) [11,9]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT



	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID
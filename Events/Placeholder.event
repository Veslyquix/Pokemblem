
// Placeholder events for any chapter that doesn't have them written 
// So you can walk around in the map and be auto refreshed 


EventPointerTable(OaksLabCh,ThisChapter)
EventPointerTable(Route1Ch,ThisChapter)
EventPointerTable(ViridianCh,ThisChapter)
EventPointerTable(Route2SCh,ThisChapter)
EventPointerTable(ViridianForestSCh,ThisChapter)
EventPointerTable(ViridianForestNCh,ThisChapter)
EventPointerTable(CeladonCh                        ,ThisChapter)
EventPointerTable(CeladonGymCh                     ,ThisChapter)
EventPointerTable(CeruleanCh                       ,ThisChapter)
EventPointerTable(CeruleanGymCh                    ,ThisChapter)
EventPointerTable(CinnabarCh                       ,ThisChapter)
EventPointerTable(CinnabarGymCh                    ,ThisChapter)
EventPointerTable(DiglettsCaveCh                   ,ThisChapter)
EventPointerTable(FuschiaCh                        ,ThisChapter)
EventPointerTable(FuschiaGymCh                     ,ThisChapter)
EventPointerTable(LavenderCh                       ,ThisChapter)
EventPointerTable(MtMoonB1Ch                       ,ThisChapter)
EventPointerTable(MtMoonB2Ch                       ,ThisChapter)
EventPointerTable(MtMoonB3Ch                       ,ThisChapter)
EventPointerTable(OaksLabCh                        ,ThisChapter)
EventPointerTable(PalletCh                         ,ThisChapter)
EventPointerTable(PewterCh                         ,ThisChapter)
EventPointerTable(PewterGymCh                      ,ThisChapter)
EventPointerTable(PCBoxCh                     ,ThisChapter)
EventPointerTable(PokemonTowerF1Ch                 ,ThisChapter)
EventPointerTable(PokemonTowerF2Ch                 ,ThisChapter)
EventPointerTable(PokemonTowerF3Ch                 ,ThisChapter)
EventPointerTable(PokemonTowerF4Ch                 ,ThisChapter)
EventPointerTable(PokemonTowerF5Ch                 ,ThisChapter)
EventPointerTable(RockTunnelB1Ch                   ,ThisChapter)
EventPointerTable(RockTunnelB2Ch                   ,ThisChapter)
EventPointerTable(Route1Ch                         ,ThisChapter)
EventPointerTable(Route10Ch                        ,ThisChapter)
EventPointerTable(Route11Ch                        ,ThisChapter)
EventPointerTable(Route12NCh                       ,ThisChapter)
EventPointerTable(Route12SCh                       ,ThisChapter)
EventPointerTable(Route13Ch                        ,ThisChapter)
EventPointerTable(Route14Ch                        ,ThisChapter)
EventPointerTable(Route15Ch                        ,ThisChapter)
EventPointerTable(Route16Ch                        ,ThisChapter)
EventPointerTable(Route17NCh                       ,ThisChapter)
EventPointerTable(Route17SCh                       ,ThisChapter)
EventPointerTable(Route18Ch                        ,ThisChapter)
EventPointerTable(Route19Ch                        ,ThisChapter)
EventPointerTable(Route20ECh                       ,ThisChapter)
EventPointerTable(Route20WCh                       ,ThisChapter)
EventPointerTable(Route21Ch                        ,ThisChapter)
EventPointerTable(Route22Ch                        ,ThisChapter)
EventPointerTable(Route23MCh                       ,ThisChapter)
EventPointerTable(Route23NCh                       ,ThisChapter)
EventPointerTable(Route23SCh                       ,ThisChapter)
EventPointerTable(Route24Ch                        ,ThisChapter)
EventPointerTable(Route25Ch                        ,ThisChapter)
EventPointerTable(Route2NCh                        ,ThisChapter)
EventPointerTable(Route2SCh                        ,ThisChapter)
EventPointerTable(Route3Ch                        ,ThisChapter)
EventPointerTable(Route4ECh                        ,ThisChapter)
EventPointerTable(Route4WCh                        ,ThisChapter)
EventPointerTable(Route5Ch                         ,ThisChapter)
EventPointerTable(Route6Ch                         ,ThisChapter)
EventPointerTable(Route7Ch                         ,ThisChapter)
EventPointerTable(Route8Ch                         ,ThisChapter)
EventPointerTable(Route9ECh                        ,ThisChapter)
EventPointerTable(Route9WCh                        ,ThisChapter)
EventPointerTable(SaffronCh                        ,ThisChapter)
EventPointerTable(SaffronDojoCh                    ,ThisChapter)
EventPointerTable(SaffronGymCh                     ,ThisChapter)
EventPointerTable(SSAnneCh                         ,ThisChapter)
EventPointerTable(VermilionCh                     ,ThisChapter)
EventPointerTable(VermilionGymCh                  ,ThisChapter)
EventPointerTable(ViridianCh                       ,ThisChapter)
EventPointerTable(ViridianForestNCh                ,ThisChapter)
EventPointerTable(ViridianForestSCh                ,ThisChapter)
EventPointerTable(ViridianGymCh                    ,ThisChapter)
EventPointerTable(SafariNCh                    ,ThisChapter)
EventPointerTable(SafariSCh                    ,ThisChapter)
EventPointerTable(SafariECh                    ,ThisChapter)
EventPointerTable(SafariWCh                    ,ThisChapter)
EventPointerTable(SilphCo1FCh                    ,ThisChapter)
EventPointerTable(SilphCo2FCh                    ,ThisChapter)
EventPointerTable(SilphCo3FCh                    ,ThisChapter)
EventPointerTable(SilphCo4FCh                    ,ThisChapter)
EventPointerTable(SilphCo5FCh                    ,ThisChapter)
EventPointerTable(SlotMachineCh                    ,ThisChapter)
EventPointerTable(SeafoamB1Ch                    ,ThisChapter)
EventPointerTable(SeafoamB2Ch                    ,ThisChapter)
EventPointerTable(SeafoamB3Ch                    ,ThisChapter)
EventPointerTable(SeafoamB4Ch                    ,ThisChapter)
EventPointerTable(SeafoamB5Ch                    ,ThisChapter)
EventPointerTable(MansionB1Ch                    ,ThisChapter)
EventPointerTable(MansionB2Ch                    ,ThisChapter)
EventPointerTable(MansionB3Ch                    ,ThisChapter)
EventPointerTable(MansionB4Ch                    ,ThisChapter)
EventPointerTable(PowerPlantCh                    ,ThisChapter)
EventPointerTable(CeruleanCaveB1Ch                    ,ThisChapter)
EventPointerTable(CeruleanCaveB2Ch                    ,ThisChapter)
EventPointerTable(CeruleanCaveB3Ch                    ,ThisChapter)
EventPointerTable(VictoryRoadB1Ch                    ,ThisChapter)
EventPointerTable(VictoryRoadB2Ch                    ,ThisChapter)
EventPointerTable(VictoryRoadB3Ch                    ,ThisChapter)
EventPointerTable(LoreleiCh                    ,ThisChapter)
EventPointerTable(BrunoCh                    ,ThisChapter)
EventPointerTable(AgathaCh                    ,ThisChapter)
EventPointerTable(LanceCh                    ,ThisChapter)
EventPointerTable(ChampionCh                    ,ThisChapter)
EventPointerTable(HallOfFameCh                     ,ThisChapter)
EventPointerTable(PokecenterCh                    ,ThisChapter)
EventPointerTable(PokecenterLeagueCh                    ,ThisChapter)
EventPointerTable(DebugCh                    ,ThisChapter)
EventPointerTable(Debug2Ch                    ,ThisChapter)


ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)
//
END_MAIN


// BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns

{ ; ReinforceEntry(CinnabarCh)
Reinforce(0xF0, 2, ReinforcementUnits, 1, 1) // Top 
Reinforce(0xF1, 2, ReinforcementUnits, 3, 2) // Top 
} 
//ASMC Reinforce_ASMC
/*

Reinforce2(0xF1, 1, ReinforcementUnits, 5, 3) // Middle 
Reinforce2(0xF2, 1, ReinforcementUnits, 3, 3) // Bottom 
*/
NoFade 
ENDA 


// #define Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns) "SVAL r5 UnitGroup|IsPointer; SVAL r6 GracePeriod+6; SVAL r7 FrequencyInTurns; SVAL r2 BushUnitID; SVAL r8 NumberOfEnemies; Call LoadReinforcements"


ReinforcementUnits:
UNIT Reinforcement0 ClassRoute1WildA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI
UNIT 

CharacterBasedEvents:
//CharacterEventBothWays(0x10,TalkEvent, Eirika, Ephraim)
END_MAIN

LocationBasedEvents:
House(0,GiveExpEvent, 11,11)
//House(0,SelectCharEvent, 11,11)


//Vendor(ShopItems,2,7)
//Armory(ArmoryItems,10,26)
//Village(0x8,VillageEvent,18,27)
//House(0,HouseEvent,6,24)
//Seize(10,2)
END_MAIN

GiveExpEvent:
GiveEXP(0x7FFF, 100)
//TutText(DebugText) 
NoFade 
ENDA 


SelectCharEvent:
SelectCharacter(Seth, Amelia, Ross, Colm, Neimi, 3000, 500, 1500, 1000, 0) 
NoFade 
ENDA 

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
AFEV 0 RefreshStuff 0 
//AFEV 0 CallTextEv 0 
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
////AFEV 0 RefreshIfNotInDanger 0 
END_MAIN

CallTextEv: 
TutText(DebugText) 
NoFade 
ENDA 

RefreshStuff:
//UNCR(0x7fff, 0x42)
NoFade
ENDA 

Dunno1:
END_MAIN

Dunno2:
END_MAIN

Dunno3:
END_MAIN

Tutorial:
END_MAIN

Units1:
UNIT Eirika  CharmanderID 0x1 Level(5,Ally,True)   [5,5] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT Ephraim  PidgeyID 0x1 Level(5,Ally,True)  [5,6] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT Seth  RattataID 0x1 Level(5,Ally,True)    [5,7] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT


Units2:
UNIT Amelia MankeyID 0x1 Level(5,Ally,True)   [6,5] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT


MoreUnits:
UNIT CaellachCC 0x11 0x1 Level(5,Enemy,True) [0,0] 0b 0x0 0x0 0x0 [0x21,0x29,0x7C,0x0] [0x0,0x0,0x0,0x0]
UNIT


EnemyUnits:
//UNIT 0x50 ClassRoute2NWildA 0x0 Level(0, Enemy, 1)   [12,16] 001b	0x0 0x01 REDA12R16 [0x0,0x0,0x0,0x0] [28,0,0,0] //ApproachEnemySummonAI //RunAwayAI
//UNIT 0x50 ParasectID 0x0 Level(0, Enemy, 1)   [13,11] 0b	0x0 0x01 REDA17R11 [SandAttack,0x0,0x0,0x0] [0,0,0,32] //ApproachEnemySummonAI //RunAwayAI
UNIT 0x50 ScytherID 0x0 Level(0, Enemy, 1)   [13,9] 0b	0x0 0x01 REDA13R9 [Tackle,FlameWheel, 0,0x0] [0,0,0,0x21] //ApproachEnemySummonAI //RunAwayAI
UNIT 0x51 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0xA0 KakunaID 0x0 Level(0, Enemy, 1)   [12,11] 0b	0x0 0x01 REDA14R11 [0x0,0x0,0x0,0x0] DoNothing
//UNIT 0x61 ButterfreeID 0x0 Level(0, Enemy, 1)   [11,12] 0b	0x0 0x01 REDA14R12 [0x0,0x0,0x0,0x0] [0,0,0,32]


UNIT




Traps1:
CoinsTrap(7,11, 1, 250)
//SaveWithoutHeal(11,10) 

SkillAccessoryTrap(8, 11, DebugCh*2, SteadyStanceID)
SpellScrollTrap(9,11, (DebugCh*2)+1, DoubleEdge)
//GenericDisappearCompletion(12, 5, 0, GarySMS, 0) // xx, yy, flag, sprite, effectID 
//GenericDisappearCompletion(13, 5, 0, PidgeotSMS, 0) // xx, yy, flag, sprite, effectID 
//GenericDisappearCompletion(16, 7, 0, SuspiciousWaterSMS, 0) // xx, yy, flag, sprite, effectID 
//GenericDisappearCompletion(13, 7, 0, sailorSMS, 0) // xx, yy, flag, sprite, effectID 
//GenericDisappearCompletion(12, 8, 0, FlowerSMS, 0) // xx, yy, flag, sprite, effectID 
//GenericDisappearCompletion(13, 9, 0, BerryTreeSMS, 0) // xx, yy, flag, sprite, effectID 
//GenericDisappearCompletion(12, 9, 0, policemanSMS, 0) // xx, yy, flag, sprite, effectID 

// flag 6 turns on/off automatically depending on if there are enemies or not 
//GenericCompletion(12,9,GarySMS, DebugText) // requires flag 6 to be on (defeated all enemies). Displays SMS ID and uses "Talk" option to then display text 

//BlankExamineTrap(21, 18, VolcanobadgeObtained, DoorLockedText) // cannot walk through 

ENDTRAP
ALIGN 4

Traps2:
ENDTRAP
ALIGN 4


Units3:
UNIT 0x13  AerodactylID 0x1 Level(1,Ally,True)  [5,6] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT 0x12  DragoniteID 0x1 Level(1,Ally,True)    [5,7] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT 0x14 FearowID 0x1 Level(1,Ally,True)   [6,5] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT 13  MewtwoID 0x1 Level(1,Ally,True)  [5,6] 0b 0x0 0x1 REDA11R11 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT 12  MewID 0x1 Level(1,Ally,True)    [5,7] 0b 0x0 0x1 REDA11R11 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT 14 SnorlaxID 0x1 Level(1,Ally,True)   [6,5] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]

UNIT 23  ZapdosID 0x1 Level(1,Ally,True)  [5,6] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT 22  ArticunoID 0x1 Level(1,Ally,True)    [5,7] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT 24 MoltresID 0x1 Level(1,Ally,True)   [6,5] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT 25 ButterfreeID 0x1 Level(1,Ally,True)   [6,5] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT 26 GyaradosID 0x1 Level(1,Ally,True)   [6,5] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]


UNIT


BeginningScene:

//ENUT 0xAC // Fast Movement 
//ENUT 0xAB 

Write_Byte(11, XCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 
Write_Byte(11, YCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 

//21, 19
//Write_Byte(21, XCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 
//Write_Byte(19, YCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 

CALL GlobalBeginningScene
//CALL CityBeginningScene
CALL LoadAndPlacePlayers 
//RandomizePlayerCoords(Ground, Range(0,0,2,2), Range(2,2,15,10)) //somewhere possible, hopefully ? 
LOAD1 1 EnemyUnits 
ENUN 
//LOAD1 1 Units3 
//ENUN 
AutoLevelUnits(15, True, 0x50FF)
RandomizeEnemyCoords(Ground, Range(0,0,2,2), Range(2,2,15,10))
LABEL 0x63
//SetUnitStatus(1, CurrentHP, 5)

//SetUnitStatus(2, CurrentHP, 25)

//SetUnitStatus(1, BadStatusType, TrappedStatusID) 
//SetUnitStatus(2, BadStatusType, TrappedStatusID) 
//SetUnitStatus(2, BadStatusType, BurnStatusID) 
//SetUnitStatus(4, BadStatusType, TrappedStatusID) 


//AutoLevelUnits(19, True, 0x120) // all 
CALL SetBushHpEvent

//SetUnitStatus(1, 0x28, Flamethrower)
 

SetUnitStatus(2, 0x28, Tackle)
SetUnitStatus(2, 0x29, Scratch)
SetUnitStatus(2, 0x2A, MegaPunch)
SetUnitStatus(2, 0x2B, Slash)
SetUnitStatus(4, 0x29, SevenRangeWep)
SetUnitStatus(4, 0x2A, Bolting)
SetUnitStatus(0x50, MaxHP, 99)
SetUnitStatus(0x50, CurrentHP, 99)
SetUnitStatus(0x50, Strength, 20)
SetUnitStatus(0x50, Defence, 15)
SetUnitStatus(0x50, Resistance, 15)

SetUnitStatus(0x50, 0x8, 60)
//SetUnitStatus(2, 0x2A, Agility)
//SetUnitStatus(2, 0x2A, RecoverMove)
//SetUnitStatus(1, 0x30, (5<<4)|ParalyzeStatusID_Def)
//SetUnitStatus(2, 0x30, (5<<4)|BurnStatusID_Def)
//SetUnitStatus(3, 0x30, (5<<4)|8)
//SetUnitStatus(1, 0x2a, Leer)
//MOVE (-1) 1 [22,26]
//MOVE (-1) 0x50 [23,26]
ENUN 

ENUT 0xAE  




//EVBIT_T 9 //Follow moving units 
//MOVE 3 Eirika [12,2]
//ENUN 
 

//CAM1 [0,0]
//CAM1 [0,26]
//CAM1 [23,26]
//CAM1 [23, 0]
//CAM1 0 // Unit 0 

#ifdef INSTALL_FMU
DisableFreeMovement
#endif

NoFade
ENDA



TalkEvent:
NoFade
ENDA


EndingScene:
ASMC 0x85C71 0x381F5 0x37CF9 //show records screen
STAL 120
EVBIT_F 0x2
MNTS 0x1 //return to title screen
NoFade
ENDA

VillageEvent:
	VillageEventItem(VillageText, Village, Boots)

HouseEvent:
	// Set parameters
	SVAL r1 NiceThighsID
	SVAL r2 (-1) // (-1) is active unit
	
	// Check if unit has skill
	// If they have, goto label #0 (end)
	ASMC (ASMC_HasSkill|1)
	BNE 0 rC r0
	
	// Learn skill to unit
	ASMC (ASMC_LearnNewSkill|1)
	
LABEL 0
	// end
	
	Text(HouseText)
	
	NoFade
	ENDA
	
	// HouseEvent(HouseText, HouseBG)



ShopItems:
SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4